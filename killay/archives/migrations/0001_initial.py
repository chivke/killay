# Generated by Django 3.2.18 on 2023-05-04 19:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Archive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('position', models.PositiveSmallIntegerField(default=0, verbose_name='Position')),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='archives', to='sites.site')),
            ],
            options={
                'verbose_name': 'archive',
                'verbose_name_plural': 'archives',
                'ordering': ['position', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', models.SlugField(max_length=255, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('position', models.PositiveSmallIntegerField(default=0, verbose_name='Position')),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='sites.site')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['position', 'slug'],
                'unique_together': {('slug', 'site')},
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', models.SlugField(max_length=255, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('position', models.PositiveSmallIntegerField(default=0, verbose_name='Position')),
                ('is_visible', models.BooleanField(default=True)),
                ('archive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='archives.archive')),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='sites.site')),
            ],
            options={
                'verbose_name': 'collection',
                'verbose_name_plural': 'collections',
                'ordering': ['position', 'slug'],
                'unique_together': {('slug', 'site')},
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', models.SlugField(max_length=255, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('position', models.PositiveSmallIntegerField(default=0, verbose_name='Position')),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='keywords', to='sites.site')),
            ],
            options={
                'verbose_name': 'keyword',
                'verbose_name_plural': 'keywords',
                'ordering': ['position', 'slug'],
                'unique_together': {('slug', 'site')},
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', models.SlugField(max_length=255, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('position', models.PositiveSmallIntegerField(default=0, verbose_name='Position')),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='persons', to='sites.site')),
            ],
            options={
                'verbose_name': 'person',
                'verbose_name_plural': 'people',
                'ordering': ['position', 'slug'],
                'unique_together': {('slug', 'site')},
            },
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('code', models.SlugField(verbose_name='Code')),
                ('title', models.CharField(max_length=512, verbose_name='Title')),
                ('thumb', models.ImageField(blank=True, null=True, upload_to='piece_thumbs', verbose_name='Thumb')),
                ('is_published', models.BooleanField(default=False, verbose_name='Published')),
                ('kind', models.CharField(choices=[('VIDEO', 'Video'), ('IMAGE', 'Image'), ('SOUND', 'Sound'), ('DOCUMENT', 'Document')], max_length=50, verbose_name='Kind')),
                ('categories', models.ManyToManyField(related_name='pieces', to='archives.Category', verbose_name='Categories')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pieces', to='archives.collection')),
                ('keywords', models.ManyToManyField(related_name='pieces', to='archives.Keyword', verbose_name='Keywords')),
                ('people', models.ManyToManyField(related_name='pieces', to='archives.Person', verbose_name='People')),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='pieces', to='sites.site')),
            ],
            options={
                'verbose_name': 'piece',
                'verbose_name_plural': 'pieces',
                'ordering': ['title', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('title', models.CharField(blank=True, max_length=500, null=True, verbose_name='Title')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Content')),
                ('ini', models.TimeField(verbose_name='Initiation')),
                ('end', models.TimeField(verbose_name='End')),
                ('piece', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sequences', to='archives.piece')),
            ],
            options={
                'verbose_name': 'sequence',
                'verbose_name_plural': 'sequences',
                'ordering': ['ini'],
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Active')),
                ('online', models.BooleanField(default=False, verbose_name='Online')),
                ('checked_at', models.DateTimeField(blank=True, null=True, verbose_name='Checked at')),
                ('ply_embed_id', models.CharField(max_length=500, verbose_name='Ply Embed ID')),
                ('plyr_provider', models.CharField(choices=[('youtube', 'Youtube'), ('vimeo', 'Vimeo')], max_length=50, verbose_name='Ply Provider')),
                ('piece', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='providers', to='archives.piece')),
            ],
            options={
                'verbose_name': 'video provider',
                'verbose_name_plural': 'video provider',
            },
        ),
        migrations.CreateModel(
            name='PieceMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('event', models.CharField(blank=True, max_length=500, null=True, verbose_name='Event')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('description_date', models.DateField(blank=True, null=True, verbose_name='Description Date')),
                ('location', models.CharField(blank=True, max_length=500, null=True, verbose_name='Location')),
                ('duration', models.TimeField(blank=True, null=True, verbose_name='Duration')),
                ('register_date', models.DateField(blank=True, null=True, verbose_name='Register Date')),
                ('register_author', models.CharField(blank=True, max_length=500, null=True, verbose_name='Register Author')),
                ('productor', models.CharField(blank=True, max_length=500, null=True, verbose_name='Productor')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('archivist_notes', models.TextField(blank=True, null=True, verbose_name='Archivist Notes')),
                ('documentary_unit', models.CharField(blank=True, max_length=500, null=True, verbose_name='Documentary Unit')),
                ('lang', models.CharField(blank=True, max_length=500, null=True, verbose_name='Language')),
                ('original_format', models.CharField(blank=True, max_length=500, null=True, verbose_name='Original Format')),
                ('piece', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='meta', to='archives.piece')),
            ],
            options={
                'verbose_name': 'piece metadata',
                'verbose_name_plural': 'piece metadatas',
            },
        ),
    ]
